# Default
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Don't exit tmux when detaching a session
set -g detach-on-destroy no-detached

# Passthrough kitty socket for remote control
set -g update-environment "KITTY_LISTEN_ON"
set -g mouse
set -s escape-time 0

# use Ctrl-a prefix
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Increase scrollback buffer / history
set-option -g history-limit 5000

# Use system clipboard + vim keys in copy m ode
set -g default-command "reattach-to-user-namespace -l /bin/zsh"

# Neovim: enable `focus-events` > autoread working
set -g focus-events on

# Set the numbering of windows to go from 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Allow us to reload our Tmux configuration while using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# smart pane switching with awareness of vim splits

# original is_vim from plugin creator:
#is_vim="ps -t '#{pane_tty}' -o state -o command | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# FIX: add '.*' to the regex so it matches also when there's path after the command
is_vim="ps -t '#{pane_tty}' -o state -o command | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|fzf|lazygit)(diff)?.*$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\' if-shell "$is_vim" "send-keys C-''" "select-pane -l"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\' select-pane -l

# New windows /panes open in the same directory
bind c new-window -c '#{pane_current_path}'
unbind '"' # disable default " for horizontal splits
bind "'" split-window -h -c "#{pane_current_path}"
bind / split-window -v -c "#{pane_current_path}"

# Resize panes with the H, J, K and L keys
bind -r H resize-pane -L 6
bind -r J resize-pane -D 4
bind -r K resize-pane -U 4
bind -r L resize-pane -R 6

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Yank selection with y and Enter
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"


# Open Lazygit in popup window
bind-key l display-popup -d '#{pane_current_path}' -w95% -h90% -E lazygit

# Look and Feel, Colors
# -------------------------------------------------------------------------

# Rename terminals
set -g set-titles on
set -g set-titles-string "[ #S ] #W"

# Status bar
set -g status-interval 5
set -g status-left " #S "
set -g status-right "%R "
setw -g window-status-format " #I #W #F "
setw -g window-status-current-format " #I #W #F "

set  -g status-style bg=color8
set  -g status-left-style fg=black,bg=brightwhite
set  -g status-right-style fg=brightwhite

setw -g window-status-style fg=color7
setw -g window-status-current-style fg=#ffffff,bg=#B80F0A

set  -g pane-active-border-style fg=color15
set  -g pane-border-style fg=color8
# vim: ft=sh
